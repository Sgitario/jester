<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.jester</groupId>
  <artifactId>jester-parent</artifactId>
  <version>0.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>jester - Parent</name>
  <description>jester - Cloud Test Framework</description>
  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>snowdrop</id>
      <name>Snowdrop</name>
      <organization>Snowdrop</organization>
      <url>https://github.com/snowdrop</url>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:git@github.com:Sgitario/jester.git</connection>
    <developerConnection>scm:git:git@github.com:Sgitario/jester.git</developerConnection>
    <url>https://github.com/Sgitario/jester</url>
    <tag>HEAD</tag>
  </scm>
  <url>https://github.com/Sgitario/jester/</url>
  <properties>
    <compiler-plugin.version>3.10.1</compiler-plugin.version>
    <source-plugin.version>3.2.1</source-plugin.version>
    <javadoc-plugin.version>3.4.0</javadoc-plugin.version>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <maven.javadoc.failOnError>false</maven.javadoc.failOnError>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <surefire-plugin.version>2.22.2</surefire-plugin.version>
    <failsafe-plugin.version>2.22.2</failsafe-plugin.version>
    <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
    <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
    <formatter-maven-plugin.version>2.19.0</formatter-maven-plugin.version>
    <impsort-maven-plugin.version>1.7.0</impsort-maven-plugin.version>
    <nexus-staging-maven-plugin.version>1.6.12</nexus-staging-maven-plugin.version>
    <!-- Declared Dependencies -->
    <junit.version>5.8.2</junit.version>
    <rest-assured.version>5.1.1</rest-assured.version>
    <awaitility.version>4.2.0</awaitility.version>
    <apache.commons-io.version>2.11.0</apache.commons-io.version>
    <javax.xml.bind.version>2.4.0-b180830.0359</javax.xml.bind.version>
    <javax.inject.version>1</javax.inject.version>
    <kubernetes-client.version>5.12.2</kubernetes-client.version>
    <jackson-annotations.version>2.13.3</jackson-annotations.version>
    <!-- Provided Dependencies -->
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
    <quarkus.version>2.9.2.Final</quarkus.version>
    <spring.version>2.7.0</spring.version>
    <!-- Format Settings -->
    <src.format.goal>format</src.format.goal>
    <src.sort.goal>sort</src.sort.goal>
    <checkstyle.version>10.3</checkstyle.version>
    <!-- Code Coverage Properties-->
    <jacoco.agent.argLine/>
    <!-- Samples -->
    <samples.container-image.registry>server.io</samples.container-image.registry>
    <!-- Testing -->
    <include.tests>**/*IT.java</include.tests>
    <exclude.openshift.tests>**/OpenShift*IT.java</exclude.openshift.tests>
    <exclude.kubernetes.tests>**/Kubernetes*IT.java</exclude.kubernetes.tests>
  </properties>
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </snapshotRepository>
    <repository>
      <id>oss.sonatype</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>
  <dependencyManagement>
    <dependencies>
      <!-- Project Dependencies -->
      <dependency>
        <groupId>io.jester</groupId>
        <artifactId>jester-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jester</groupId>
        <artifactId>jester-benchmark</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jester</groupId>
        <artifactId>jester-containers</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jester</groupId>
        <artifactId>jester-operators</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jester</groupId>
        <artifactId>jester-quarkus</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jester</groupId>
        <artifactId>jester-spring</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jester</groupId>
        <artifactId>jester-service-kafka</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jester</groupId>
        <artifactId>jester-service-database</artifactId>
        <version>${project.version}</version>
      </dependency>
      <!-- Declared Dependencies -->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.rest-assured</groupId>
        <artifactId>rest-assured-bom</artifactId>
        <version>${rest-assured.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${apache.commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${javax.xml.bind.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>${javax.inject.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-client</artifactId>
        <version>${kubernetes-client.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-client</artifactId>
        <version>${kubernetes-client.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-operatorhub</artifactId>
        <version>${kubernetes-client.version}</version>
      </dependency>
      <!-- SMELL: This version is required by Fabric8 dependency... -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson-annotations.version}</version>
      </dependency>
      <!-- Provided Dependencies -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-test-common</artifactId>
        <version>${quarkus.version}</version>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${spring.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${source-plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
        <version>${formatter-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>${src.format.goal}</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.revelc.code</groupId>
        <artifactId>impsort-maven-plugin</artifactId>
        <version>${impsort-maven-plugin.version}</version>
        <configuration>
          <!-- store outside of target to speed up formatting when mvn clean is used -->
          <cachedir>.cache</cachedir>
          <groups>java.,javax.,org.,com.</groups>
          <staticGroups>*</staticGroups>
          <removeUnused>true</removeUnused>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>${src.sort.goal}</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <configuration>
          <configLocation>coding/checkstyle.xml</configLocation>
          <encoding>UTF-8</encoding>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <linkXRef>true</linkXRef>
        </configuration>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <argLine>${jacoco.agent.argLine}</argLine>
          <failIfNoTests>false</failIfNoTests>
          <includes>
            <include>*Test.java</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${failsafe-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <argLine>${jacoco.agent.argLine}</argLine>
              <excludedGroups>${exclude.tests.with.tags}</excludedGroups>
              <failIfNoTests>false</failIfNoTests>
              <includes>
                <include>${include.tests}</include>
              </includes>
              <excludes>
                <exclude>${exclude.openshift.tests}</exclude>
                <exclude>${exclude.kubernetes.tests}</exclude>
              </excludes>
              <systemProperties>
                <!-- Samples mapping -->
                <sample.quarkus-rest.image>${samples.container-image.registry}/test/quarkus-rest:latest
                </sample.quarkus-rest.image>
                <sample.quarkus-json.image>${samples.container-image.registry}/test/quarkus-json:latest
                </sample.quarkus-json.image>
                <sample.messaging-kafka.image>${samples.container-image.registry}/test/quarkus-messaging-kafka:latest
                </sample.messaging-kafka.image>
              </systemProperties>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>framework</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>framework</name>
        </property>
      </activation>
      <modules>
        <module>jester-core</module>
        <module>jester-benchmark</module>
        <module>jester-containers</module>
        <module>jester-operators</module>
        <module>jester-quarkus</module>
        <module>jester-spring</module>
        <module>jester-service-database</module>
        <module>jester-service-kafka</module>
      </modules>
    </profile>
    <profile>
      <id>examples</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>examples</name>
        </property>
      </activation>
      <modules>
        <module>examples/quarkus-greetings</module>
        <module>examples/quarkus-ssl</module>
        <module>examples/quarkus-oidc</module>
        <module>examples/quarkus-jdbc-mysql</module>
        <module>examples/quarkus-grpc</module>
        <module>examples/spring-greetings</module>
        <module>examples/spring-ssl</module>
        <module>examples/apps-benchmark</module>
      </modules>
    </profile>
    <profile>
      <!-- You need to be connected to a Kubernetes instance to activate
          this profile! -->
      <id>kubernetes</id>
      <activation>
        <property>
          <name>kubernetes</name>
        </property>
      </activation>
      <properties>
        <include.tests>**/Kubernetes*IT.java</include.tests>
        <exclude.kubernetes.tests>no</exclude.kubernetes.tests>
      </properties>
    </profile>
    <profile>
      <id>validate-format</id>
      <activation>
        <property>
          <name>validate-format</name>
        </property>
      </activation>
      <properties>
        <src.format.goal>validate</src.format.goal>
        <src.sort.goal>check</src.sort.goal>
      </properties>
    </profile>
    <!-- This profile generates jacoco coverage files. -->
    <profile>
      <id>coverage</id>
      <activation>
        <property>
          <name>coverage</name>
        </property>
      </activation>
      <properties>
        <!--suppress UnresolvedMavenProperty to ignore warnings in idea-->
        <jacoco.agent.argLine>${jacoco.generated.agent.argLine}</jacoco.agent.argLine>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>io.jester*</include>
                  </includes>
                  <propertyName>jacoco.generated.agent.argLine</propertyName>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
            <configuration>
              <autoVersionSubmodules>true</autoVersionSubmodules>
              <tagNameFormat>@{project.version}</tagNameFormat>
              <pushChanges>false</pushChanges>
              <localCheckout>true</localCheckout>
              <remoteTagging>false</remoteTagging>
              <arguments>-DskipTests=true</arguments>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <configuration>
              <gpgArguments>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${javadoc-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>${nexus.version}</version>
            <extensions>true</extensions>
            <configuration>
              <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
              <serverId>ossrh</serverId>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
              <stagingProgressTimeoutMinutes>60</stagingProgressTimeoutMinutes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
